// This is an autogenerated file from Firebase Studio.
'use server';

/**
 * @fileOverview A flow to suggest common unit conversions based on user input and past history.
 *
 * - suggestConversions - A function that suggests unit conversions.
 * - SuggestConversionsInput - The input type for the suggestConversions function.
 * - SuggestConversionsOutput - The output type for the suggestConversions function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const SuggestConversionsInputSchema = z.object({
  inputValue: z.string().describe('The numerical input value being converted.'),
  inputUnit: z.string().describe('The unit of the input value (e.g., meters, kilograms).'),
  pastConversions: z.array(z.object({
    fromUnit: z.string(),
    toUnit: z.string(),
  })).optional().describe('A list of the user\'s past conversions.'),
});
export type SuggestConversionsInput = z.infer<typeof SuggestConversionsInputSchema>;

const SuggestConversionsOutputSchema = z.array(z.object({
  toUnit: z.string().describe('The suggested unit to convert to.'),
  description: z.string().describe('A description of why this conversion is suggested.'),
}));
export type SuggestConversionsOutput = z.infer<typeof SuggestConversionsOutputSchema>;

export async function suggestConversions(input: SuggestConversionsInput): Promise<SuggestConversionsOutput> {
  return suggestConversionsFlow(input);
}

const prompt = ai.definePrompt({
  name: 'suggestConversionsPrompt',
  input: {schema: SuggestConversionsInputSchema},
  output: {schema: SuggestConversionsOutputSchema},
  prompt: `You are a unit conversion assistant. Given a user's input value, input unit, and past conversion history, suggest common unit conversions that the user might want to perform.

Input Value: {{{inputValue}}}
Input Unit: {{{inputUnit}}}

Past Conversions:
{{#if pastConversions}}
  {{#each pastConversions}}
    - From: {{{fromUnit}}}, To: {{{toUnit}}}
  {{/each}}
{{else}}
  No past conversions.
{{/if}}

Suggest 3 unit conversions, and for each one, include a brief description of why that conversion might be useful or relevant to the user. Return a JSON array.
`,
});

const suggestConversionsFlow = ai.defineFlow(
  {
    name: 'suggestConversionsFlow',
    inputSchema: SuggestConversionsInputSchema,
    outputSchema: SuggestConversionsOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
